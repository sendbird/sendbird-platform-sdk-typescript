/**
 * Sendbird Platform SDK
 * Sendbird Platform API SDK  [https://sendbird.com/docs/chat/v3/platform-api/getting-started/prepare-to-use-api](https://sendbird.com/docs/chat/v3/platform-api/getting-started/prepare-to-use-api)  Contact Support:   Name: Sendbird   Email: [support@sendbird.com](https://mailto:support@sendbird.com)
 *
 * OpenAPI spec version: 1.0.0
 * Contact: support@sendbird.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { CreateAGroupChannelResponseChannel } from './CreateAGroupChannelResponseChannel';
import { CreateAGroupChannelResponseDisappearingMessage } from './CreateAGroupChannelResponseDisappearingMessage';
import { CreateAGroupChannelResponseSmsFallback } from './CreateAGroupChannelResponseSmsFallback';
import { SendbirdGroupChannelCreatedBy } from './SendbirdGroupChannelCreatedBy';
import { SendbirdMember } from './SendbirdMember';
import { SendbirdUser } from './SendbirdUser';
import { HttpFile } from '../http/http';

export class CreateAGroupChannelResponse {
    'channel'?: CreateAGroupChannelResponseChannel;
    'channelUrl'?: string;
    'coverUrl'?: string;
    'createdAt'?: number;
    'createdBy'?: SendbirdGroupChannelCreatedBy;
    'customType'?: string;
    'data'?: string;
    'disappearingMessage'?: CreateAGroupChannelResponseDisappearingMessage;
    'freeze'?: boolean;
    'hasAiBot'?: boolean;
    'hasBot'?: boolean;
    'id'?: number;
    'ignoreProfanityFilter'?: boolean;
    'isAccessCodeRequired'?: boolean;
    'isBroadcast'?: boolean;
    'isCreated'?: boolean;
    'isDiscoverable'?: boolean;
    'isDistinct'?: boolean;
    'isEphemeral'?: boolean;
    'isPublic'?: boolean;
    'isSuper'?: boolean;
    'joinedMemberCount'?: number;
    'maxLengthMessage'?: number;
    'memberCount'?: number;
    'members'?: Array<SendbirdMember>;
    'messageSurvivalSeconds'?: number;
    'name'?: string;
    'operators'?: Array<SendbirdUser>;
    'smsFallback'?: CreateAGroupChannelResponseSmsFallback;
    'unreadMentionCount'?: number;
    'unreadMessageCount'?: number;

    static readonly discriminator: string | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "channel",
            "baseName": "channel",
            "type": "CreateAGroupChannelResponseChannel",
            "format": ""
        },
        {
            "name": "channelUrl",
            "baseName": "channel_url",
            "type": "string",
            "format": ""
        },
        {
            "name": "coverUrl",
            "baseName": "cover_url",
            "type": "string",
            "format": ""
        },
        {
            "name": "createdAt",
            "baseName": "created_at",
            "type": "number",
            "format": "int64"
        },
        {
            "name": "createdBy",
            "baseName": "created_by",
            "type": "SendbirdGroupChannelCreatedBy",
            "format": ""
        },
        {
            "name": "customType",
            "baseName": "custom_type",
            "type": "string",
            "format": ""
        },
        {
            "name": "data",
            "baseName": "data",
            "type": "string",
            "format": ""
        },
        {
            "name": "disappearingMessage",
            "baseName": "disappearing_message",
            "type": "CreateAGroupChannelResponseDisappearingMessage",
            "format": ""
        },
        {
            "name": "freeze",
            "baseName": "freeze",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "hasAiBot",
            "baseName": "has_ai_bot",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "hasBot",
            "baseName": "has_bot",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "id",
            "baseName": "id",
            "type": "number",
            "format": "int64"
        },
        {
            "name": "ignoreProfanityFilter",
            "baseName": "ignore_profanity_filter",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "isAccessCodeRequired",
            "baseName": "is_access_code_required",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "isBroadcast",
            "baseName": "is_broadcast",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "isCreated",
            "baseName": "is_created",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "isDiscoverable",
            "baseName": "is_discoverable",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "isDistinct",
            "baseName": "is_distinct",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "isEphemeral",
            "baseName": "is_ephemeral",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "isPublic",
            "baseName": "is_public",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "isSuper",
            "baseName": "is_super",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "joinedMemberCount",
            "baseName": "joined_member_count",
            "type": "number",
            "format": ""
        },
        {
            "name": "maxLengthMessage",
            "baseName": "max_length_message",
            "type": "number",
            "format": ""
        },
        {
            "name": "memberCount",
            "baseName": "member_count",
            "type": "number",
            "format": ""
        },
        {
            "name": "members",
            "baseName": "members",
            "type": "Array<SendbirdMember>",
            "format": ""
        },
        {
            "name": "messageSurvivalSeconds",
            "baseName": "message_survival_seconds",
            "type": "number",
            "format": ""
        },
        {
            "name": "name",
            "baseName": "name",
            "type": "string",
            "format": ""
        },
        {
            "name": "operators",
            "baseName": "operators",
            "type": "Array<SendbirdUser>",
            "format": ""
        },
        {
            "name": "smsFallback",
            "baseName": "sms_fallback",
            "type": "CreateAGroupChannelResponseSmsFallback",
            "format": ""
        },
        {
            "name": "unreadMentionCount",
            "baseName": "unread_mention_count",
            "type": "number",
            "format": ""
        },
        {
            "name": "unreadMessageCount",
            "baseName": "unread_message_count",
            "type": "number",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return CreateAGroupChannelResponse.attributeTypeMap;
    }

    public constructor() {
    }
}


/**
 * Sendbird Platform SDK
 * Sendbird Platform API SDK  [https://sendbird.com/docs/chat/v3/platform-api/getting-started/prepare-to-use-api](https://sendbird.com/docs/chat/v3/platform-api/getting-started/prepare-to-use-api)  Contact Support:   Name: Sendbird   Email: [support@sendbird.com](https://mailto:support@sendbird.com)
 *
 * OpenAPI spec version: 1.0.0
 * Contact: support@sendbird.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { InviteAsMembersResponseAllOf } from './InviteAsMembersResponseAllOf';
import { SendbirdBasicUserInfo } from './SendbirdBasicUserInfo';
import { SendbirdDisappearingMessage } from './SendbirdDisappearingMessage';
import { SendbirdGroupChannel } from './SendbirdGroupChannel';
import { SendbirdMember } from './SendbirdMember';
import { SendbirdMessageResponse } from './SendbirdMessageResponse';
import { SendbirdSmsFallback } from './SendbirdSmsFallback';
import { SendbirdUser } from './SendbirdUser';
import { HttpFile } from '../http/http';

export class InviteAsMembersResponse {
    'channelUrl': string;
    'countPreference'?: InviteAsMembersResponseCountPreferenceEnum;
    'coverUrl'?: string;
    'createdAt'?: number;
    'createdBy'?: SendbirdBasicUserInfo;
    'customType'?: string;
    'data'?: string;
    'deliveryReceipt'?: any;
    'disappearingMessage'?: SendbirdDisappearingMessage;
    'freeze'?: boolean;
    'hasAiBot'?: boolean;
    'hasBot'?: boolean;
    'hiddenState'?: InviteAsMembersResponseHiddenStateEnum;
    'ignoreProfanityFilter'?: boolean;
    'invitedAt'?: number;
    'inviter'?: SendbirdBasicUserInfo;
    'isAccessCodeRequired'?: boolean;
    'isBroadcast'?: boolean;
    'isDiscoverable'?: boolean;
    'isDistinct'?: boolean;
    'isEphemeral'?: boolean;
    'isExclusive'?: boolean;
    'isHidden'?: boolean;
    'isMuted'?: boolean;
    'isPublic'?: boolean;
    'isPushEnabled'?: boolean;
    'isSuper'?: boolean;
    'joinedMemberCount'?: number;
    'joinedTs'?: number;
    'lastMessage'?: SendbirdMessageResponse;
    'maxLengthMessage'?: number;
    'memberCount'?: number;
    'memberState'?: InviteAsMembersResponseMemberStateEnum;
    'members'?: Array<SendbirdMember>;
    'messageSurvivalSeconds'?: number;
    'metadata'?: any;
    'myRole'?: InviteAsMembersResponseMyRoleEnum;
    'name'?: string;
    'pushTriggerOption'?: InviteAsMembersResponsePushTriggerOptionEnum;
    'readReceipt'?: { [key: string]: number; };
    'smsFallback'?: SendbirdSmsFallback;
    'tsMessageOffset'?: number;
    'unreadMentionCount'?: number;
    'unreadMessageCount'?: number;
    'userLastRead'?: number;
    'operators'?: Array<SendbirdUser>;

    static readonly discriminator: string | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "channelUrl",
            "baseName": "channel_url",
            "type": "string",
            "format": ""
        },
        {
            "name": "countPreference",
            "baseName": "count_preference",
            "type": "InviteAsMembersResponseCountPreferenceEnum",
            "format": ""
        },
        {
            "name": "coverUrl",
            "baseName": "cover_url",
            "type": "string",
            "format": ""
        },
        {
            "name": "createdAt",
            "baseName": "created_at",
            "type": "number",
            "format": "int64"
        },
        {
            "name": "createdBy",
            "baseName": "created_by",
            "type": "SendbirdBasicUserInfo",
            "format": ""
        },
        {
            "name": "customType",
            "baseName": "custom_type",
            "type": "string",
            "format": ""
        },
        {
            "name": "data",
            "baseName": "data",
            "type": "string",
            "format": ""
        },
        {
            "name": "deliveryReceipt",
            "baseName": "delivery_receipt",
            "type": "any",
            "format": ""
        },
        {
            "name": "disappearingMessage",
            "baseName": "disappearing_message",
            "type": "SendbirdDisappearingMessage",
            "format": ""
        },
        {
            "name": "freeze",
            "baseName": "freeze",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "hasAiBot",
            "baseName": "has_ai_bot",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "hasBot",
            "baseName": "has_bot",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "hiddenState",
            "baseName": "hidden_state",
            "type": "InviteAsMembersResponseHiddenStateEnum",
            "format": ""
        },
        {
            "name": "ignoreProfanityFilter",
            "baseName": "ignore_profanity_filter",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "invitedAt",
            "baseName": "invited_at",
            "type": "number",
            "format": "int64"
        },
        {
            "name": "inviter",
            "baseName": "inviter",
            "type": "SendbirdBasicUserInfo",
            "format": ""
        },
        {
            "name": "isAccessCodeRequired",
            "baseName": "is_access_code_required",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "isBroadcast",
            "baseName": "is_broadcast",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "isDiscoverable",
            "baseName": "is_discoverable",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "isDistinct",
            "baseName": "is_distinct",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "isEphemeral",
            "baseName": "is_ephemeral",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "isExclusive",
            "baseName": "is_exclusive",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "isHidden",
            "baseName": "is_hidden",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "isMuted",
            "baseName": "is_muted",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "isPublic",
            "baseName": "is_public",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "isPushEnabled",
            "baseName": "is_push_enabled",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "isSuper",
            "baseName": "is_super",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "joinedMemberCount",
            "baseName": "joined_member_count",
            "type": "number",
            "format": ""
        },
        {
            "name": "joinedTs",
            "baseName": "joined_ts",
            "type": "number",
            "format": "int64"
        },
        {
            "name": "lastMessage",
            "baseName": "last_message",
            "type": "SendbirdMessageResponse",
            "format": ""
        },
        {
            "name": "maxLengthMessage",
            "baseName": "max_length_message",
            "type": "number",
            "format": ""
        },
        {
            "name": "memberCount",
            "baseName": "member_count",
            "type": "number",
            "format": ""
        },
        {
            "name": "memberState",
            "baseName": "member_state",
            "type": "InviteAsMembersResponseMemberStateEnum",
            "format": ""
        },
        {
            "name": "members",
            "baseName": "members",
            "type": "Array<SendbirdMember>",
            "format": ""
        },
        {
            "name": "messageSurvivalSeconds",
            "baseName": "message_survival_seconds",
            "type": "number",
            "format": ""
        },
        {
            "name": "metadata",
            "baseName": "metadata",
            "type": "any",
            "format": ""
        },
        {
            "name": "myRole",
            "baseName": "my_role",
            "type": "InviteAsMembersResponseMyRoleEnum",
            "format": ""
        },
        {
            "name": "name",
            "baseName": "name",
            "type": "string",
            "format": ""
        },
        {
            "name": "pushTriggerOption",
            "baseName": "push_trigger_option",
            "type": "InviteAsMembersResponsePushTriggerOptionEnum",
            "format": ""
        },
        {
            "name": "readReceipt",
            "baseName": "read_receipt",
            "type": "{ [key: string]: number; }",
            "format": "int64"
        },
        {
            "name": "smsFallback",
            "baseName": "sms_fallback",
            "type": "SendbirdSmsFallback",
            "format": ""
        },
        {
            "name": "tsMessageOffset",
            "baseName": "ts_message_offset",
            "type": "number",
            "format": "int64"
        },
        {
            "name": "unreadMentionCount",
            "baseName": "unread_mention_count",
            "type": "number",
            "format": ""
        },
        {
            "name": "unreadMessageCount",
            "baseName": "unread_message_count",
            "type": "number",
            "format": ""
        },
        {
            "name": "userLastRead",
            "baseName": "user_last_read",
            "type": "number",
            "format": "int64"
        },
        {
            "name": "operators",
            "baseName": "operators",
            "type": "Array<SendbirdUser>",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return InviteAsMembersResponse.attributeTypeMap;
    }

    public constructor() {
    }
}


export type InviteAsMembersResponseCountPreferenceEnum = "false" | "all" | "unread_message_count_only" | "unread_mentioned_count_only" ;
export type InviteAsMembersResponseHiddenStateEnum = "hidden_allow_auto_unhide" | "hidden_prevent_auto_unhide" | "unhidden" ;
export type InviteAsMembersResponseMemberStateEnum = "invited" | "joined" | "none" ;
export type InviteAsMembersResponseMyRoleEnum = "" | "none" | "operator" ;
export type InviteAsMembersResponsePushTriggerOptionEnum = "all" | "default" | "mention_only" | "false" ;

